---
- block: # Join Zerotier network
  - name: Get Zerotier NodeID
    shell: zerotier-cli info -j
    check_mode: no
    register: zerotier_info

  - name: Join Zerotier network
    command: zerotier-cli join -j {{ zerotier_network_id }}
    check_mode: no
    changed_when: false
    register: zerotier_network

  - name: zerotier | dump network response
    debug:
      var:  zerotier_network.stdout
      verbosity: 2
    tags:
      - debug

  - name: zerotier | register responses
    set_fact:
      zerotier_node_id:  "{{ (zerotier_info.stdout |from_json).address }}"
      zerotier_device:   "{{ (zerotier_network.stdout |from_json).portDeviceName }}"
      zerotier_net_name: "{{ (zerotier_network.stdout |from_json).name }}"
      zerotier_ip:       "{{ (zerotier_network.stdout |from_json).assignedAddresses }}"
      zerotier_status:   "{{ (zerotier_network.stdout |from_json).status }}"

  - name: zerotier | Pause for 3 seconds before authorising the node
    pause:
      seconds: 3

  - name: Notify API of members to authorise
    uri:
      url: "{{ zerotier_api_url }}/api/network/{{ zerotier_network_id }}/member/{{ zerotier_node_id }}"
      method: POST
      headers:
        Authorization: bearer {{ zerotier_accesstoken }}
      body:
        config:
          authorized: true
      body_format: json

  - name: zerotier | Pause for 3 seconds before authorising the node
    pause:
      seconds: 3

  - name: Add and authorize members to network
    uri:
      url: "{{ zerotier_api_url }}/api/network/{{ zerotier_network_id }}/member/{{ zerotier_node_id }}"
      method: POST
      headers:
        Authorization: bearer {{ zerotier_accesstoken }}
      body:
        name: "{{ zerotier_name }}"
        description: "{{ zerotier_description }}"
        hidden: false
        config:
          authorized: true
      body_format: json
      return_content: yes
    register: apiresult

  - name: Add members to group (add tags)
    uri:
      url: "{{ zerotier_api_url }}/api/network/{{ zerotier_network_id }}/member/{{ zerotier_node_id }}"
      method: POST
      headers:
        Authorization: bearer {{ zerotier_accesstoken }}
      body:
        name: "{{ zerotier_name }}"
        description: "{{ zerotier_description }}"
        hidden: false
        config:
          tags:
            - ["{{ zerotier_group_id }}","{{ zerotier_role_id }}"]
      body_format: json
      return_content: yes
      when: zerotier_group_id is defined and zerotier_group_id is defined
    register: group_result

  - name: zerotier | dump authorisation response
    debug:
      var: apiresult
      verbosity: 2
    tags:
      - debug

  - name: zerotier | dump group response
    debug:
      var: group_result
      verbosity: 2
    tags:
      - debug

  when:
  - zerotier_accesstoken is defined
  - not ansible_check_mode
  tags:
  - zerotier
  - configuration
